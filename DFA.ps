%!
%%BoundingBox: (atend)
%%Pages: (atend)
%%DocumentFonts: (atend)
%%EndComments
%
% FrameMaker PostScript Prolog 3.0, for use with FrameMaker 3.0
% Copyright (c) 1986,87,89,90,91 by Frame Technology Corporation.
% All rights reserved.
%
% Known Problems:
%	Due to bugs in Transcript, the 'PS-Adobe-' is omitted from line 1
/FMversion (3.0) def 
% Set up Color vs. Black-and-White
	/FMPrintInColor systemdict /colorimage known
		systemdict /currentcolortransfer known or def
% Uncomment this line to force b&w on color printer
%   /FMPrintInColor false def
/FrameDict 195 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	setpapername 
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin
	array /fillvals exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def 
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for 
	} def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setpattern} 
	{grayness}
	ifelse
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip} {gip} {bip} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip gip bip w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
%%EndProlog
%%BeginSetup
(3.0) FMVERSION
1 1 612 792 0 1 2 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 .1 FMFILL
2 .3 FMFILL
3 .5 FMFILL
4 .7 FMFILL
5 .9 FMFILL
6 .97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 .9 FMFILL
18 .7 FMFILL
19 .5 FMFILL
20 .3 FMFILL
21 .1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "3" 3
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
90 630 126 657 13.5 RR
7 X
0 K
V
0.5 H
2 Z
0 X
N
99 636 117 650 R
7 X
V
0 12 Q
0 X
(70) 99 642 T
288 630 324 657 13.5 RR
7 X
V
0 X
N
297 636 315 650 R
7 X
V
0 X
(72) 297 642 T
171 630 207 657 13.5 RR
7 X
V
0 X
N
180 636 198 650 R
7 X
V
0 X
(71) 180 642 T
360 630 396 657 13.5 RR
7 X
V
0 X
N
369 636 387 650 R
7 X
V
0 X
(67) 369 642 T
90 666 162 702 R
7 X
V
0 X
N
99 675 153 693 R
7 X
V
0 10 Q
0 X
(EXCLUDE) 99 686.33 T
159.46 642.31 171 639 159.46 635.69 159.46 639 4 Y
V
126 639 159.46 639 2 L
N
0 12 Q
(LP) 134 644.82 T
276.46 642.31 288 639 276.46 635.69 276.46 639 4 Y
V
207 639 276.46 639 2 L
N
(STRING) 224 644.82 T
348.46 642.31 360 639 348.46 635.69 348.46 639 4 Y
V
324 639 348.46 639 2 L
N
(RP) 334 643.82 T
(COMMA) 225 587.6 T
264.54 573.91 251.99 576.01 263.74 580.88 264.14 577.4 4 Y
V
283 360 54 54 252 630 A
187.14 617.39 189 630 194.1 618.32 190.62 617.86 4 Y
V
193 270 63 54 252 630 A
81 549 414 711 R
N
90 486 162 522 R
7 X
V
0 X
N
99 495 153 513 R
7 X
V
0 X
(RANK) 99 505 T
81 405 531 531 R
N
108 432 144 459 13.5 RR
7 X
V
0 X
N
117 438 135 452 R
7 X
V
0 X
(80) 117 444 T
351 432 387 459 13.5 RR
7 X
V
0 X
N
360 438 378 452 R
7 X
V
0 X
(83) 360 444 T
180 432 216 459 13.5 RR
7 X
V
0 X
N
189 438 207 452 R
7 X
V
0 X
(81) 189 444 T
270 432 306 459 13.5 RR
7 X
V
0 X
N
279 438 297 452 R
7 X
V
0 X
(82) 279 444 T
432 432 468 459 13.5 RR
7 X
V
0 X
N
441 438 459 452 R
7 X
V
0 X
(35*) 441 444 T
168.46 444.31 180 441 168.46 437.69 168.46 441 4 Y
V
144 441 168.46 441 2 L
N
258.46 444.31 270 441 258.46 437.69 258.46 441 4 Y
V
216 441 258.46 441 2 L
N
339.46 444.31 351 441 339.46 437.69 339.46 441 4 Y
V
306 441 339.46 441 2 L
N
420.46 444.31 432 441 420.46 437.69 420.46 441 4 Y
V
387 441 420.46 441 2 L
N
(LP) 153 450 T
(STRING) 221 450.82 T
(RP) 315 450 T
(RP) 405 450 T
283.7 481.79 270 486 283.85 489.69 283.78 485.74 4 Y
V
0 82 99 27 270 459 A
206.78 467.88 197.99 459.01 200.74 471.19 203.76 469.54 4 Y
V
90 157 72 27 270 459 A
(LP) 279 495 T
FMENDPAGE
%%EndPage: "3" 2
%%Page: "2" 2
612 792 0 FMBEGINPAGE
262.33 631 297 657 13 RR
7 X
0 K
V
0.5 H
2 Z
0 X
N
271 636.78 288.33 650.26 R
7 X
V
0 12 Q
0 X
(33) 271 642.26 T
189 630 225 657 13.5 RR
7 X
V
0 X
N
198 636 216 650 R
7 X
V
0 X
(46) 198 642 T
90 630 126 657 13.5 RR
7 X
V
0 X
N
99 636 117 650 R
7 X
V
0 X
(45) 99 642 T
90 666 162 702 R
7 X
V
0 X
N
99 675 153 693 R
7 X
V
0 10 Q
0 X
(QUESTION) 99 686.33 T
177.46 642.31 189 639 177.46 635.69 177.46 639 4 Y
V
126 639 177.46 639 2 L
N
249.46 642.31 261 639 249.46 635.69 249.46 639 4 Y
V
225 639 249.46 639 2 L
N
0 12 Q
(STRING) 135 648 T
(RP) 234 648.82 T
81 621 306 711 R
N
90 567 162 603 R
7 X
V
0 X
N
99 576 153 594 R
7 X
V
0 X
(ANSWER) 99 586 T
99 468 135 495 13.5 RR
7 X
V
0 X
N
108 474 126 488 R
7 X
V
0 X
(50) 108 480 T
90 241.22 126 268.22 13.5 RR
7 X
V
0 X
N
99 247.22 117 261.22 R
7 X
V
0 X
(60) 99 253.22 T
180 243 216 270 13.5 RR
7 X
V
0 X
N
189 249 207 263 R
7 X
V
0 X
(61) 189 255 T
252 522 288 549 13.5 RR
7 X
V
0 X
N
261 528 279 542 R
7 X
V
0 X
(51) 261 534 T
(TEXT) 171 470.6 T
(SHOR) 171 432.82 T
(T_TEXT) 202.27 432.82 T
(CHOOSE) 168.03 387.82 T
(INTEGER) 173.7 540.82 T
(FLOA) 171 506.6 T
(T) 200.98 506.6 T
(ELIPSES) 90 135.82 T
(INT) 198 146.6 T
252 486 288 513 13.5 RR
7 X
V
0 X
N
261 492 279 506 R
7 X
V
0 X
(52) 261 498 T
468 243 504 270 13.5 RR
7 X
V
0 X
N
477 249 495 263 R
7 X
V
0 X
(35) 477 255 T
252 450 288 477 13.5 RR
7 X
V
0 X
N
261 456 279 470 R
7 X
V
0 X
(53) 261 462 T
414 468 450 495 13.5 RR
7 X
V
0 X
N
423 474 441 488 R
7 X
V
0 X
(35) 423 480 T
252 414 288 441 13.5 RR
7 X
V
0 X
N
261 420 279 434 R
7 X
V
0 X
(54) 261 426 T
240.46 534.31 252 531 240.46 527.69 240.46 531 4 Y
V
117 495 117 531 240.46 531 3 L
N
240.46 498.31 252 495 240.46 491.69 240.46 495 4 Y
V
126 495 240.46 495 2 L
N
240.46 462.31 252 459 240.46 455.69 240.46 459 4 Y
V
126 468 126 459 240.46 459 3 L
N
240.46 426.31 252 423 240.46 419.69 240.46 423 4 Y
V
117 468 117 423 240.46 423 3 L
N
240.46 381.31 252 378 240.46 374.69 240.46 378 4 Y
V
108 468 108 378 240.46 378 3 L
N
342.65 503.64 350.99 495.01 339.34 497.91 341 500.78 4 Y
V
288 531 341.01 500.77 2 L
N
331.17 491.18 342 486 330.08 484.65 330.62 487.91 4 Y
V
288 495 330.62 487.91 2 L
N
330.01 476.48 342 477 332.11 470.2 331.06 473.34 4 Y
V
288 459 331.06 473.34 2 L
N
331.02 463.14 341.99 468.01 335.27 458.07 333.15 460.6 4 Y
V
288 423 333.16 460.59 2 L
N
(RP) 351 479.6 T
402.46 480.31 414 477 402.46 473.69 402.46 477 4 Y
V
369 477 402.46 477 2 L
N
402.46 489.31 414 486 402.46 482.69 402.46 486 4 Y
V
369 486 402.46 486 2 L
N
402.46 498.31 414 495 402.46 491.69 402.46 495 4 Y
V
369 495 402.46 495 2 L
N
402.46 471.31 414 468 402.46 464.69 402.46 468 4 Y
V
369 468 402.46 468 2 L
N
360 243 396 270 13.5 RR
7 X
V
0 X
N
369 249 387 263 R
7 X
V
0 X
(63) 369 255 T
288 243 324 270 13.5 RR
7 X
V
0 X
N
297 249 315 263 R
7 X
V
0 X
(62) 297 255 T
(INT) 117 216.82 T
(RP) 333 254.6 T
(RP) 387 198.82 T
(RP) 333 162.82 T
(RP) 415 255.82 T
252 369 324 405 R
7 X
V
0 X
N
261 378 315 396 R
7 X
V
0 X
(CHOOSE) 261 388 T
427.34 455.79 431.98 468.01 434.52 455.19 430.93 455.49 4 Y
V
270 352 108 90 324 468 A
(RP) 372.33 407.6 T
81 360 531 612 R
N
90 306 162 342 R
7 X
V
0 X
N
99 315 153 333 R
7 X
V
0 X
(CHOOSE) 99 325 T
81 90 531 351 R
N
360 144 396 171 13.5 RR
7 X
V
0 X
N
369 150 387 164 R
7 X
V
0 X
(67) 369 156 T
216 180 252 207 13.5 RR
7 X
V
0 X
N
225 186 243 200 R
7 X
V
0 X
(66) 225 192 T
144 144 180 171 13.5 RR
7 X
V
0 X
N
153 150 171 164 R
7 X
V
0 X
(65) 153 156 T
90 180 126 207 13.5 RR
7 X
V
0 X
N
99 186 117 200 R
7 X
V
0 X
(64) 99 192 T
(LP) 283 306.82 T
168.46 255.31 180 252 168.46 248.69 168.46 252 4 Y
V
126 252 168.46 252 2 L
N
(STRING) 225 254.6 T
(LP) 135 252.82 T
(LP) 171 191.6 T
(LP) 157 209.6 T
276.46 255.31 288 252 276.46 248.69 276.46 252 4 Y
V
216 252 276.46 252 2 L
N
348.46 255.31 360 252 348.46 248.69 348.46 252 4 Y
V
324 252 348.46 252 2 L
N
456.46 255.31 468 252 456.46 248.69 456.46 252 4 Y
V
396 252 456.46 252 2 L
N
0 90 90 27 288 270 A
207.48 278.22 197.99 270.03 201.7 282 204.59 280.11 4 Y
V
90 158 90 27 288 270 A
111.31 218.53 108 207 104.69 218.53 108 218.53 4 Y
V
108 243 108 218.53 2 L
N
183.48 232 188.99 243.02 190.16 230.76 186.82 231.38 4 Y
V
270 345 63 45 126 243 A
132.7 157.87 143.99 153.03 131.85 151.15 132.27 154.51 4 Y
V
180 251 36 27 144 180 A
194 230.63 197.99 243.01 201.17 230.39 197.59 230.51 4 Y
V
270 350 27 72 171 243 A
209.26 169.63 215.99 180.02 215.79 167.64 212.53 168.64 4 Y
V
270 335 36 27 180 180 A
205.11 230.88 206.99 243.02 211.83 231.73 208.47 231.3 4 Y
V
199 270 27 36 234 243 A
(LP) 216 218.6 T
300.31 182.53 297 171 293.69 182.53 297 182.53 4 Y
V
297 243 297 182.53 2 L
N
(EXCLUDE) 0 -90 306.82 234 TF
348.46 156.31 360 153 348.46 149.69 348.46 153 4 Y
V
324 153 348.46 153 2 L
N
374.69 231.47 378 243 381.31 231.47 378 231.47 4 Y
V
378 171 378 231.47 2 L
N
252 135 324 171 R
7 X
V
0 X
N
261 144 315 162 R
7 X
V
0 10 Q
0 X
(EXCLUDE) 261 155.33 T
342 549 414 585 R
7 X
V
0 X
N
351 558 405 576 R
7 X
V
0 12 Q
0 X
(RANK) 351 568 T
330.46 561.31 342 558 330.46 554.69 330.46 558 4 Y
V
108 495 108 558 330.46 558 3 L
N
(RANK) 243 567 T
435.34 508.22 431.98 495.01 427.83 508 431.59 508.11 4 Y
V
12 90 18 63 414 495 A
(RP) 441 531 T
FMENDPAGE
%%EndPage: "2" 1
%%Page: "1" 1
612 792 0 FMBEGINPAGE
324 531 360 558 13.5 RR
7 X
0 K
V
0.5 H
2 Z
0 X
N
333 537 351 551 R
7 X
V
0 12 Q
0 X
(5) 333 543 T
252 531 288 558 13.5 RR
7 X
V
0 X
N
261 537 279 551 R
7 X
V
0 X
(2*) 261 543 T
180 531 216 558 13.5 RR
7 X
V
0 X
N
189 537 207 551 R
7 X
V
0 X
(16) 189 543 T
81 531 117 558 13.5 RR
7 X
V
0 X
N
90 537 108 551 R
7 X
V
0 X
(15) 90 543 T
441 468 477 495 13.5 RR
7 X
V
0 X
N
450 474 468 488 R
7 X
V
0 X
(4) 450 480 T
441 405 477 432 13.5 RR
7 X
V
0 X
N
450 411 468 425 R
7 X
V
0 X
(6*) 450 417 T
441 630 477 657 13.5 RR
7 X
V
0 X
N
450 636 468 650 R
7 X
V
0 X
(3) 450 642 T
369 630 405 657 13.5 RR
7 X
V
0 X
N
378 636 396 650 R
7 X
V
0 X
(2) 378 642 T
153 630 189 657 13.5 RR
7 X
V
0 X
N
162 636 180 650 R
7 X
V
0 X
(1) 162 642 T
81 630 117 657 13.5 RR
7 X
V
0 X
N
90 636 108 650 R
7 X
V
0 X
(0) 90 642 T
141.46 642.31 153 639 141.46 635.69 141.46 639 4 Y
V
117 639 141.46 639 2 L
N
249.46 642.31 261 639 249.46 635.69 249.46 639 4 Y
V
189 639 249.46 639 2 L
N
357.46 642.31 369 639 357.46 635.69 357.46 639 4 Y
V
333 639 357.46 639 2 L
N
429.46 642.31 441 639 429.46 635.69 429.46 639 4 Y
V
405 639 429.46 639 2 L
N
168.46 543.31 180 540 168.46 536.69 168.46 540 4 Y
V
117 540 168.46 540 2 L
N
240.46 543.31 252 540 240.46 536.69 240.46 540 4 Y
V
216 540 240.46 540 2 L
N
261 630 333 666 R
7 X
V
0 X
N
270 639 324 657 R
7 X
V
0 X
(SUR) 270 649 T
(VEY) 292.37 649 T
81 666 153 702 R
7 X
V
0 X
N
90 675 144 693 R
7 X
V
0 X
(ST) 90 685 T
(AR) 103.04 685 T
(T) 118.98 685 T
441 531 513 567 R
7 X
V
0 X
N
450 540 504 558 R
7 X
V
0 X
(QUER) 450 550 T
(Y) 481.99 550 T
81 567 153 603 R
7 X
V
0 X
N
90 576 144 594 R
7 X
V
0 X
(SUR) 90 586 T
(VEY) 112.37 586 T
(LP) 126 648 T
(SUR) 198 648 T
(VEY) 220.37 648 T
(RP) 342 648 T
(LP) 414 648 T
453.31 578.54 450 567 446.69 578.54 450 578.54 4 Y
V
450 630 450 578.54 2 L
N
(QUER) 459 594 T
(Y) 490.99 594 T
453.31 506.54 450 495 446.69 506.54 450 506.54 4 Y
V
450 531 450 506.54 2 L
N
(RP) 459 513 T
429.46 543.31 441 540 429.46 536.69 429.46 540 4 Y
V
360 540 429.46 540 2 L
N
359.14 522.2 350.98 531.01 362.56 527.86 360.85 525.03 4 Y
V
441 477 360.86 525.02 2 L
N
(LP) 378 488.6 T
(QUER) 378 549 T
(Y) 409.99 549 T
453.31 443.54 450 432 446.69 443.54 450 443.54 4 Y
V
450 468 450 443.54 2 L
N
(EOF) 459 443.6 T
(STRING) 126 549 T
(RP) 225 549 T
72 522 297 612 R
N
305.99 522 431.99 441 431.99 396 531 396 531 711 72 711 72 621
 305.99 621 8 Y
N
81.18 342 154.62 378 R
7 X
V
0 X
N
90.36 351 145.44 369 R
7 X
V
0 X
(QUER) 90.36 361 T
(Y) 122.35 361 T
170.62 318.31 182.16 315 170.62 311.69 170.62 315 4 Y
V
117.9 315 170.62 315 2 L
N
(STRING) 128.8 324.82 T
81.18 306 117.9 333 13.5 RR
7 X
V
0 X
N
90.36 312 108.72 326 R
7 X
V
0 X
(30) 90.36 318 T
182.16 306 218.88 333 13.5 RR
7 X
V
0 X
N
191.34 312 209.7 326 R
7 X
V
0 X
(31) 191.34 318 T
255.6 306 292.32 333 13.5 RR
7 X
V
0 X
N
264.78 312 283.14 326 R
7 X
V
0 X
(32) 264.78 318 T
485.1 306 521.82 333 13.5 RR
7 X
V
0 X
N
494.27 312 512.64 326 R
7 X
V
0 X
(33) 494.27 318 T
485.1 225 521.82 252 13.5 RR
7 X
V
0 X
N
494.27 231 512.64 245 R
7 X
V
0 X
(34) 494.27 237 T
244.06 318.31 255.6 315 244.06 311.69 244.06 315 4 Y
V
218.88 315 244.06 315 2 L
N
363.4 318.31 374.94 315 363.4 311.69 363.4 315 4 Y
V
292.32 315 363.4 315 2 L
N
(LP) 228.06 324 T
(QUESTION) 301.5 324 T
374.94 306 448.38 342 R
7 X
V
0 X
N
384.12 315 439.2 333 R
7 X
V
0 10 Q
0 X
(QUESTION) 384.12 326.33 T
473.56 318.31 485.1 315 473.56 311.69 473.56 315 4 Y
V
448.38 315 473.56 315 2 L
N
0 12 Q
(RP) 457.56 324 T
497.58 263.53 494.27 252 490.97 263.53 494.27 263.53 4 Y
V
494.27 306 494.27 263.53 2 L
N
(LP) 503.45 279 T
423.19 230.69 411.66 234 423.19 237.31 423.19 234 4 Y
V
485.1 234 423.19 234 2 L
N
(ANSWER) 420.84 243 T
338.22 225 411.66 261 R
7 X
V
0 X
N
347.4 234 402.48 252 R
7 X
V
0 X
(ANSWER) 347.4 244 T
303.85 230.69 292.32 234 303.85 237.31 303.85 234 4 Y
V
338.22 234 303.85 234 2 L
N
(RP) 301.5 243.82 T
255.6 225 292.32 252 13.5 RR
7 X
V
0 X
N
264.78 231 283.14 245 R
7 X
V
0 X
(35) 264.78 237 T
182.16 225 218.88 252 13.5 RR
7 X
V
0 X
N
191.34 231 209.7 245 R
7 X
V
0 X
(4*) 191.34 237 T
230.41 230.69 218.88 234 230.41 237.31 230.41 234 4 Y
V
255.6 234 230.41 234 2 L
N
(RP) 228.06 243 T
72 216 531 387 R
N
FMENDPAGE
%%EndPage: "1" 0
%%Trailer
%%BoundingBox: 0 0 612 792
%%Pages: 3 -1
%%DocumentFonts: Times-Roman
